[geoimagenet_api]
postgis_db = postgres
postgis_host = localhost
postgis_user = postgres
postgis_password = postgres

# at startup, wait 30 seconds for the postgis database to be connectable
wait_for_db_connection_on_import = false

# whether echo=True is set when creating the sqlalchemy engine
verbose_sqlalchemy = false

# magpie url to query the currently logged in user
# can be a relative path from the `request.host_url`, or a complete url
magpie_url = /magpie
magpie_verify_ssl = true

# Url to the batch creation service
batch_creation_url = /ml/processes/batch-creation/jobs

# Sets the following Access-Control headers to allow everything:
# Allow-Origins, Allow-Methods, Allow-Headers, Allow-Credentials
allow_cors = false

# gs_* configuration is only useful for the script that populates raster images in geoserver
# GeoServer datastore instance where the GeoTIFF images are served from.
gs_datastore_url =
gs_datastore_user = admin
gs_datastore_password = geoserver
# GeoServer instance where there is the wms cascade. The frontend connects to this instance.
gs_mirror_url =
gs_mirror_user = admin
gs_mirror_password = geoserver

# defaults to: geoimagenet_api/geoserver_setup/config.yaml
gs_yaml_config =

sentry_url =
sentry_environment =
sentry_server_name =